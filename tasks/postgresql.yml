---

# works around https://github.com/ansible/ansible/issues/8161 where large
# numbers are converted to scientific notation.
- shell: expr `getconf _PHYS_PAGES` / 2 * `getconf PAGE_SIZE`
  register: dynamic_shmmax
  changed_when: false

- template: src=sysctl-shm.conf.j2 dest=/etc/sysctl.d/30-postgresql-shm.conf
  notify: execute sysctl

- command: /sbin/sysctl -p /etc/sysctl.d/30-postgresql-shm.conf

- action: shell /usr/bin/getent passwd {{ postgresql.user }} | /usr/bin/wc -l | tr -d ' '
  register: user_exists
  changed_when: false

- group: name={{ postgresql.group }}
  when: user_exists.stdout == 0

- user: name={{ postgresql.user }} group={{ postgresql.group }} home={{ postgresql.config.data_dir }}
  when: user_exists.stdout == 0

- file: path={{ postgresql.config.data_dir }}/{{ postgresql.version }}/main state=directory owner={{ postgresql.user }} recurse=yes

- name: Install Postgresql server and client
  apt: pkg={{ item }}-{{ postgresql.version }} state=installed
  register: postgresql_install
  with_items:
    - postgresql
  tags:
    - packages

- name: Install development header files
  apt: pkg={{ item }} state=installed
  when: postgresql.install_development_headers == true
  with_items:
    - libpq-dev
  tags:
    - packages

- stat: path={{ postgresql.config.data_dir }}/{{ postgresql.version }}/main/base
  register: pgd

# if the directory that we need to initialize does not exist then stop the
# service while we install everything.
- service: name=postgresql state=stopped
  when: pgd.stat.exists == false

- name: Install PostgreSQL config file
  template: src=postgresql/postgresql.conf.j2
            dest=/etc/postgresql/{{ postgresql.version }}/main/postgresql.conf
            owner={{ postgresql.user }} group={{ postgresql.group }}
  notify:
    - restart postgresql
  tags:
    - configuration

- template: src=postgresql/{{ item }}.j2
            dest=/etc/postgresql/{{ postgresql.version }}/main/{{ item }}
            owner={{ postgresql.user }} group={{ postgresql.group }}
  with_items:
    - pg_hba.conf
    - environment
  notify:
    - reload postgresql
  tags:
    - configuration

- command: /usr/lib/postgresql/9.1/bin/pg_ctl initdb -D {{ postgresql.config.data_dir }}/{{ postgresql.version }}/main
  sudo: yes
  sudo_user: "{{ postgresql.user }}"
  when: pgd.stat.exists == false
  notify:
    - restart postgresql

# not required but these files always trip me up, easier if they never existed
- file: path={{ postgresql.config.data_dir }}/{{ postgresql.version }}/main/{{ item }} state=absent
  with_items:
    - postgresql.conf
    - pg_hba.conf
    - pg_ident.conf

- template: src=postgresql/monit.conf.j2 dest=/etc/monit/conf.d/postgresql.conf
  notify:
    - restart monit

- template: src=postgresql/replication-monitoring.sh.j2 dest=/usr/local/bin/postgresql-replication-monitoring.sh mode=0755
